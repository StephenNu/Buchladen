* Initial Interview - [2013/10/10]
- Who will be using the system?
- How many people will be using the system at a time?
- Can the interface be a web application?
- Other items besides textbooks?
- What properties should a book have?
  + [ ] Title
  + [ ] Edition
  + [ ] ISBN
  + [ ] Author
  + [ ] Condition
  + [ ] Department
  + [ ] Description
- What fields should books be searchable by?
  - Up to us.
- Are there different levels of users? (Admin/Normal)
  - Make a webmaster user.
- Should the users be ranked based on past sales?
  - Yes
- Does the system have to handle communication between users?
  - No, local campus.


* Required Functionality
  - Register a new user.
  - Logout/Login.
  - Search for products.
    + What fields to search by?
  - Purchase textbooks.
  - Sell textbooks.
  - Inventory manegement by the user.
  - Kijiji style
  - Rules for 


* Milestone 1
DEADLINE: <2013-10-25 Fri>
** Base Installation
- Setup base Django application
- Deployment docs.
** User Representation
- Design doc for the model of users in the database.
- Email Address will be used to sign up
    - look at oauth2 based logins (openid)
- Books being sold
- Rating
    - extend user model
** User Registration
- Email Address Required
- (possibly validate emails in future milestone)
    - eliminated with facebook/google login
** User Login
- Login with email address.
** User Logout
** Basic CSS

* Milestone 2
** Book Storage
- Design Doc
- Title
- Edition
- ISBN
- Author
- Condition
- Description
** Posting Books for Sale
- Create new book associated with the user.
- CAPTCHA (or something similar) to prevent bots.
** Removing Postings
- 
** Viewing All Books for Sale
- Itemized list.
- Ability to sort by arbitrary field.
** Searching for Books
- Search by arbitrary fields
- Sort results after search
* Milestone 3
** Administrative User
- Allow admin to remove content from anywhere on the site.
- Allow admin to ban users from the site.
** Refined CSS Layout
- Refine colours
- Refine layout for easy of use
